apply plugin: 'com.android.application'

android {
    namespace "com.cms.app"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.cms.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true  // Habilita multidex para evitar errores de memoria

        aaptOptions {
            // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true  // Habilita la desugar library
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    google()
    mavenCentral()
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation 'androidx.multidex:multidex:2.0.1'  // Multidex para proyectos grandes

    // AÃ±adir la dependencia requerida para coreLibraryDesugaring
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.3"

    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists() && servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, Google services plugin not applied. Push Notifications won't work")
}

// Aumentar la memoria disponible para evitar errores de OutOfMemory
gradle.projectsEvaluated {
    tasks.withType(JavaCompile).configureEach {
        options.fork = true
        options.forkOptions.memoryInitialSize = "512m"
        options.forkOptions.memoryMaximumSize = "4096m"
    }
}
